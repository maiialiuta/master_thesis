# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui/mainWindow.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


import sys, os
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QIcon
from PyQt5.QtCore import QUrl
from PyQt5.QtGui import QDesktopServices
# import metrics ui
from app.gui.calculationsWindow import Ui_metricsWindow
from app.gui.metricsManualWindow import Ui_Dialog
from app.src.metrics.calculator.metrics_calculator import MetricsCalculator
from app.src.entities.the_project import Project
from app.src.generator.generate_ast import AstGenerator
from app.src.visitors.init_visitor import InitCommonsNodeVisitor


class Ui_MainWindow(object):

    def open_github(self):
        QDesktopServices.openUrl(QUrl('https://github.com/maiialiuta/Kursova.git'))

    def __init__(self, MainWindow):
        self.window = MainWindow
        self.file_name = ''

    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.setEnabled(True)
        # set the size of window as fixed
        MainWindow.setFixedSize(569, 386)
        font = QtGui.QFont()
        font.setPointSize(14)
        font.setBold(True)
        font.setWeight(75)
        MainWindow.setFont(font)
        MainWindow.setStyleSheet("background-color: #0093E9;")
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.calculateBtn = QtWidgets.QPushButton(self.centralwidget)
        # self.calculateBtn.setGeometry(QtCore.QRect(120, 290, 341, 51))
        # self.calculateBtn.setGeometry(QtCore.QRect(80, 290, 341, 51))
        self.calculateBtn.setGeometry(QtCore.QRect(60, 290, 341, 51))
        self.calculateBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        font = QtGui.QFont()
        font.setFamily("Lucida Console")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(75)
        self.calculateBtn.setFont(font)
        
        self.calculateBtn.setStyleSheet("background-color: #FCFCFD;\n"
"  border-radius: 8px;\n"
"  color: #000000;\n"
"  position: relative;\n"
"  text-align: center;\n"
"  font-size: 18px;")
        self.calculateBtn.setObjectName("calculateBtn")
        self.openFolderButton = QtWidgets.QToolButton(self.centralwidget)
        # self.openFolderButton.setGeometry(QtCore.QRect(320, 190, 141, 41))
        self.openFolderButton.setGeometry(QtCore.QRect(330, 180, 141, 31))
        self.openFolderButton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        font = QtGui.QFont()
        font.setFamily("Lucida Console")
        font.setPointSize(10)
        font.setBold(False)
        font.setWeight(75)
        self.openFolderButton.setFont(font)
        
        self.openFolderButton.setStyleSheet("background-color: #FCFCFD;\n"
"  border-radius: 6px;\n"
"  color: #000000;\n"
"  position: relative;\n"
"  text-align: left;\n"
"  font-size: 14px;")


        # self.openFolderButton.setStyleSheet("color:white;\n"
        #                                     "font-weight: bold;\n"
        #                                     "background-color: #B68F05;")


        self.openFolderButton.setObjectName("openFolderButton")
        self.nameLbl = QtWidgets.QLabel(self.centralwidget)

        # self.nameLbl.setGeometry(QtCore.QRect(60, 30, 471, 51))
        self.nameLbl.setGeometry(QtCore.QRect(40, 30, 491, 51))

        font = QtGui.QFont()
        font.setFamily("Lucida Console")
        font.setPointSize(20)
        font.setBold(True)
        font.setWeight(75)
        self.nameLbl.setFont(font)
        self.nameLbl.setStyleSheet("color: #FFFFFF;\n"
                                   "")
        self.nameLbl.setObjectName("nameLbl")

        self.nameLbl.setAlignment(QtCore.Qt.AlignCenter)

        self.pythonProjectLbl = QtWidgets.QLabel(self.centralwidget)
        
        # self.pythonProjectLbl.setGeometry(QtCore.QRect(60, 90, 261, 51))
        self.pythonProjectLbl.setGeometry(QtCore.QRect(150, 90, 271, 51))

        font = QtGui.QFont()
        font.setFamily("Lucida Console")
        font.setPointSize(11)
        font.setBold(True)
        font.setWeight(75)
        self.pythonProjectLbl.setFont(font)
        self.pythonProjectLbl.setStyleSheet("color: #FFFFFF;")

        self.pythonProjectLbl.setAlignment(QtCore.Qt.AlignCenter)
#         self.pythonProjectLbl.setStyleSheet("color: #FFD43B;\n"
# "align-text: center;")
        
        self.pythonProjectLbl.setObjectName("pythonProjectLbl")
        self.selectProjectLbl = QtWidgets.QLabel(self.centralwidget)
        # self.selectProjectLbl.setGeometry(QtCore.QRect(120, 180, 171, 51))
        self.selectProjectLbl.setGeometry(QtCore.QRect(140, 180, 171, 61))
        font = QtGui.QFont()
        font.setFamily("Lucida Console")
        font.setPointSize(12)
        font.setBold(True)
        font.setWeight(300)
        self.selectProjectLbl.setFont(font)
        self.selectProjectLbl.setStyleSheet("color:#FFFFFF;")

        self.pythonProjectLbl.setAlignment(QtCore.Qt.AlignCenter)

        self.selectProjectLbl.setObjectName("selectProjectLbl")
        self.helpBtn = QtWidgets.QToolButton(self.centralwidget)
        # self.helpBtn.setGeometry(QtCore.QRect(510, 330, 31, 31))
        # self.helpBtn.setGeometry(QtCore.QRect(470, 290, 51, 51))
        self.helpBtn.setGeometry(QtCore.QRect(410, 290, 51, 51))
        self.helpBtn.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        font = QtGui.QFont()
        font.setFamily("Lucida Console")
        font.setPointSize(10)
        font.setBold(True)
        font.setWeight(75)
        self.helpBtn.setFont(font)
        # self.helpBtn.setStyleSheet("color:white;\n"
        #                            "font-weight: bold;\n"
        #                            "background-color: #B68F05;")
        self.helpBtn.setStyleSheet("background-color: #FCFCFD;\n"
"  border-radius: 6px;\n"
"  color: #000000;\n"
"  position: relative;\n"
"  text-align: left;\n"
"  font-size: 18px;")
        
        self.pythonProjectLbl.setAlignment(QtCore.Qt.AlignCenter)

        self.helpBtn.setObjectName("helpBtn")
        


        self.githubbutton = QtWidgets.QToolButton(self.centralwidget)
        self.githubbutton.setGeometry(QtCore.QRect(470, 290, 51, 51))
        
        font = QtGui.QFont()
        font.setPointSize(-1)
        font.setBold(True)
        self.githubbutton.setFont(font)
        self.githubbutton.setCursor(QtGui.QCursor(QtCore.Qt.PointingHandCursor))
        self.githubbutton.setStyleSheet("background-color: #FCFCFD;\n"
"  border-radius: 8px;\n"
"  color: #000000;\n"
"  position: relative;\n"
"  text-align: left;\n"
"  font-size: 18px;")
        self.githubbutton.setText("")
        icon_path = os.path.join(os.path.dirname(__file__), 'resources', 'images','logos','25231.png')
        self.githubbutton.setIcon(QIcon(icon_path))
        self.githubbutton.clicked.connect(self.open_github)
        self.githubbutton.setObjectName("githubbutton")



        self.selectedProjectLbl = QtWidgets.QLabel(self.centralwidget)
        # self.selectedProjectLbl.setGeometry(QtCore.QRect(320, 240, 221, 21))
        self.selectedProjectLbl.setGeometry(QtCore.QRect(320, 220, 200, 16))  
        font = QtGui.QFont()
        font.setFamily("Lucida Console")
        font.setPointSize(8)
        font.setItalic(True)
        font.setWeight(50)
        self.selectedProjectLbl.setFont(font)
        self.selectedProjectLbl.setStyleSheet("color: rgb(185, 185, 185)")
        self.selectedProjectLbl.setObjectName("selectedProjectLbl")
        # self.label = QtWidgets.QLabel(self.centralwidget)
        # self.label.setGeometry(QtCore.QRect(310, 90, 181, 71))
        # self.label.setText("")
        # import os
        # scriptDir = os.path.dirname(os.path.realpath(__file__))
        # self.label.setPixmap(QtGui.QPixmap(scriptDir + '\\resources\images\\logos\\Python_metrics_logo.png'))
        # self.label.setScaledContents(True)
        # self.label.setObjectName("label")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

       # set click listeners
        self.openFolderButton.clicked.connect(self.openFiles)
        self.calculateBtn.clicked.connect(self.calcMetrics)
        self.helpBtn.clicked.connect(self.openManual)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        # set title
        MainWindow.setWindowTitle(_translate("MainWindow", "Python Metrics Calculator"))
        # set favicon
        import os
        scriptDir = os.path.dirname(os.path.realpath(__file__))
        MainWindow.setWindowIcon(QtGui.QIcon(scriptDir + '\\resources\\images\\favicons\\favicon.png'))
        self.calculateBtn.setText(_translate("MainWindow", "START CALCULATING"))
        self.openFolderButton.setText(_translate("MainWindow", "Open Folder"))
        self.nameLbl.setText(_translate("MainWindow", "Metrics Calculator"))
        self.pythonProjectLbl.setText(_translate("MainWindow", "For Python Projects"))
        self.selectProjectLbl.setText(_translate("MainWindow", "Select project:"))
        self.helpBtn.setText(_translate("MainWindow", "?"))
        self.selectedProjectLbl.setText(_translate("MainWindow", "selected project : None"))

    # method that opens file dialog
    def openFiles(self):
        self.file_name = QtWidgets.QFileDialog.getExistingDirectory()

        if (self.file_name):
            self.selectedProjectLbl.setText(self.file_name.split('/')[-1])

    # method that calculates metrics
    def calcMetrics(self):
        if (self.file_name != ''):
            test_project_name = self.file_name.split('/')[-1]
            project = Project(self.file_name, test_project_name)
            AstGenerator(project).start_parsing()

            # Init existing classes for each .py file of the project
            for python_file_obj in project.get_files():
                InitCommonsNodeVisitor(python_file_obj).visit_Module(python_file_obj.get_generated_ast())

            # Calculate Metrics for each class
            for python_file_obj in project.get_files():
                for class_obj in python_file_obj.get_file_classes():
                    MetricsCalculator(class_obj)

            self.calculationsWindow = QtWidgets.QDialog()
            self.ui = Ui_metricsWindow()
            self.ui.setupUi(self.calculationsWindow, project, self.window)
            self.calculationsWindow.show()
            self.window.close()
        elif (self.file_name == ''):
            self.selectedProjectLbl.setText("You must select a Project")

    def openManual(self):
        self.manualWindow = QtWidgets.QDialog()
        self.ui = Ui_Dialog()
        self.ui.setupUi(self.manualWindow, self.window)
        self.manualWindow.show()
        self.window.close()

    


if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
